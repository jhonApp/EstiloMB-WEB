@{
    ViewData["Title"] = "Pagamento";
}
@model EstiloMB_Web.Models.PagamentoViewModel
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    <link rel="stylesheet" href="~/css/site.css" />

    <script type="text/javascript" src="~/js/fa/all.js"></script>
    <script type="text/javascript" src="~/js/ChartJS/Chart.js"></script>
    <script type="text/javascript" src="~/js/site.js"></script>
    <script type="text/javascript" src="~/js/principal.js"></script>
    <script type="text/javascript" src="~/js/Minimum-1.8.js"></script>
    <script src="https://sdk.mercadopago.com/js/v2"></script>
    <script src="~/js/swipe.js"></script>

    const mp = new MercadoPago("TEST-a90cd080-ef38-4c31-b250-32c50e7b2777");
</head>
<div class="nav-main-sacola">
    <img class="logo" src="~/image/logo-oficial.png" alt=""/>
    <nav>
        <div class="wrapper">
            
            <ul class="nav-links">
                <li class="active">
                    <a>Sacola</a>
                </li>
                <li class="active">
                    <a>Identificação</a>
                </li>
                <li>
                    <a>Pagamento</a>
                </li>
                <li>
                    <a>Sucesso</a>
                </li>
            </ul>
        </div>
    </nav>
</div>
<content>
    <div class="wrapper-sacola" id="pagamento">
        <div class="colsWeb">
            <div class="card-pagamento">
                <div class="forma-pagamento">
                    <div class="title-pagamento"><h1>Formas de pagamento</h1></div>
                    <div class="content-menu-pagamento">
                        <div class="menu-pagamento">
                            <ul>
                                <li class="card" onclick="changeMenu(this)" style="background-color: rgba(242, 242, 242, 0.686);" >
                                    <span>
                                        <i class="fas fa-credit-card icon"></i>
                                        Cartão de Crédito
                                    </span>
                                </li>
                                <li class="pix" onclick="changeMenu(this)">
                                    <span>
                                        <i class="fas fa-dollar-sign icon"></i>
                                        PIX
                                    </span>
                                </li>
                            </ul>
                        </div>
                        <div class="pagamento-selecionado card">
                            <div class="card-container">
                                <div class="front">
                                    <div class="image">
                                        <img src="~/image/chip.png" />
                                        <img src="~/image/visa.png" name="brand" class="hidden"/>
                                    </div>
                                    <div class="card-number-box">**** **** **** ****</div>
                                    <div class="flexbox">
                                        <div class="box">
                                            <span>Nome Completo</span>
                                            <div class="card-holder-name"></div>
                                        </div>
                                        <div class="box">
                                            <span>Validade até</span>
                                            <div class="expiration">
                                                <span class="exp-month">mm </span>
                                                <span class="exp-month"> / </span>
                                                <span class="exp-year">aa</span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="back">
                                    <div class="stripe"></div>
                                    <div class="box">
                                        <span>CVV</span>
                                        <div class="cvv-box"></div>
                                        <img src=~/image/visa.png/>
                                    </div>
                                </div>
                            </div>
                            <form action="" id="form-checkout">
                                <input class="hidden" id="form-checkout__issuer"/>
                                <div class="inputBox">
                                    <span>Número do Cartão</span>
                                    <input type="text" class="card-number-input"
                                            id="form-checkout__cardNumber"
                                            maxlength="19"
                                            onkeyup="$pagamento.actionCard(this)" />
                                    <span class="error-message">* Número do cartão inválido.</span>
                                </div>
                                <div class="inputBox">
                                    <span>Nome Impresso no cartão</span>
                                    <input type="text" id="form-checkout__cardholderName" maxlength="25" class="card-holder-input"/>
                                </div>
                                <div class="flexbox">
                                    <div class="inputBox">
                                        <span>Mês</span>
                                        <select name="" id="" class="month-input">
                                            <option value="month" selected disabled>mês</option>
                                            <option value="01">01</option>
                                            <option value="02">02</option>
                                            <option value="03">03</option>
                                            <option value="04">04</option>
                                            <option value="05">05</option>
                                            <option value="06">06</option>
                                            <option value="07">07</option>
                                            <option value="08">08</option>
                                            <option value="09">09</option>
                                            <option value="10">10</option>
                                            <option value="11">11</option>
                                            <option value="12">12</option>
                                        </select>
                                    </div>
                                    <div class="inputBox">
                                        <span>Ano</span>
                                        <select name="" class="year-input" id="form-checkout__expirationDate">
                                            <option value="year" selected disabled>ano</option>
                                            @for (int i = 0; i < 10; i++)
                                            {
                                                int year = DateTime.Now.Year + i;
                                                <option value="@year">@year</option>
                                            }
                                        </select>
                                    </div>
                                    <div class="inputBox">
                                        <span>CVV</span>
                                        <input type="text" maxlength="4" id="form-checkout__securityCode" class="cvv-input"/>
                                    </div>
                                </div>
                                <div class="inputBox">
                                    <span>N° Parcelas</span>
                                    <select name="" id="" class="year-input" id="form-checkout__installments">
                                        <option value="parcelas" selected disabled>parcelas</option>
                                        <option value="1">1</option>
                                        <option value="2">2</option>
                                        <option value="3">3</option>
                                        <option value="4">4</option>
                                        <option value="5">5</option>
                                        <option value="6">6</option>
                                        <option value="7">7</option>
                                        <option value="8">8</option>
                                        <option value="9">9</option>
                                        <option value="10">10</option>
                                        <option value="11">11</option>
                                        <option value="12">12</option>
                                    </select>
                                </div>
                            </form>
                        </div>
                        <div class="pagamento-selecionado pix hidden">
                            <div class="pix-container">
                                <img src="~/image/logo-pix1.png" />
                                <p>Após clicar em <strong>"Finalizar Pedido"</strong> seu Pix será gerado.</p>
                                <p>O processamento do pagamento é simples e imediato</p>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="valor-shop">
                    <div class="title-resumo"><h1>Resumo do Pedido</h1></div>
                    <div class="resumo">
                        <div class="item-resumo">
                            <div>
                                <span>Produto(s):</span>
                                <span data-bind="ProdutoValor"></span>
                            </div>
                            <div>
                                <span>Frete:</span>
                                <span data-bind="Frete"></span>
                            </div>
                        </div>
                        <div class="total-resumo">
                            <div>
                                <span>Total:</span>
                                <span data-bind="PedidoValorTotal"></span>
                            </div>
                        </div>
                        <button class="button-pay pay green" id="form-checkout__submit">
                            <span><a href="~/Produto/Pagamento">FINALIZAR PEDIDO</a></span>
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</content>
<script>
    (function($pagamento){
        var init = function (container) {
            let contents = container.querySelector("[ui-content='data']");
            if (!contents) { return false; }

            contents.isAutoLoad = (contents.getAttribute("ui-load") || "").toLowerCase() === "auto";

            if (!contents.initialized) {
                contents.container = container;
                contents.pixelAutoLoadThreshold = 25;
                contents.maxPageCount = parseInt(contents.getAttribute("maxPageCount"), 10) || 10;

                contents.url = contents.getAttribute("data-url");
                contents.template = contents.template || contents.querySelector(":scope > template") || false;

                let elements = null;

                elements = container.querySelectorAll("[ui-content='filter']") || false;
                for (let i = 0; i < elements.length; i++) {
                    let target = elements[i].hasAttribute("for") ? eval(elements[i].getAttribute("for").replace("this", "elements[i]")) : false;
                    if (target) { target.filter = elements[i]; continue; }

                    contents.filter = elements[i];
                }

                //elements = container.querySelectorAll("[ui-content='empty']") || false;
                //for (let i = 0; i < elements.length; i++) {
                //    let target = elements[i].hasAttribute("for") ? eval(elements[i].getAttribute("for").replace("this", "elements[i]")) : false;
                //    if (target) { target.empty = elements[i]; continue; }

                //    contents.empty = elements[i];
                //}

                //elements = container.querySelectorAll("[ui-content='loading']") || false;
                //for (let i = 0; i < elements.length; i++) {
                //    let target = elements[i].hasAttribute("for") ? eval(elements[i].getAttribute("for").replace("this", "elements[i]")) : false;
                //    if (target) { target.loading = elements[i]; continue; }

                //    contents.loading = elements[i];
                //}

                elements = container.querySelectorAll("[ui-content='paging']") || false;
                for (let i = 0; i < elements.length; i++) {
                    let target = elements[i].hasAttribute("for") ? eval(elements[i].getAttribute("for").replace("this", "elements[i]")) : false;
                    if (target) {
                        target.paging = elements[i];
                    }
                    else {
                        target = contents;
                        target.paging = elements[i];
                    }

                    target.paging.pages = target.paging.querySelector("[ui-content='pages']") || false;
                    target.paging.prevPage = target.paging.querySelector("[ui-content='prev-page']") || false;
                    target.paging.nextPage = target.paging.querySelector("[ui-content='next-page']") || false;
                }

                contents.initialized = true;
            }

            return contents;
        };

        function formatarValorMonetario(valorString) {
            const valorFloat = parseFloat(valorString);
            if (isNaN(valorString)) {
                return "Valor inválido";
            }
            const valorFormatado = valorFloat.toLocaleString("pt-BR", {
                style: "currency",
                currency: "BRL",
            });
            return valorFormatado;
        }

        $pagamento.carregar = function(container) {
            
            const valoresFormatados = {
                ProdutoValor: formatarValorMonetario(`${@Model.Pedido.ValorTotalProdutos}`),
                PedidoValorTotal: formatarValorMonetario(`${@Model.Pedido.ValorTotalPedido}`),
                Frete: formatarValorMonetario(`${@Model.Pedido.Frete}`)
            };
            $min.bind(container, valoresFormatados);
        };

        $pagamento.actionCard = function(input){
            let number = input.value;
            console.log(number.length)
            if(number.length >= 6){
                $pagamento.getCreditCardBrand(number, input);
            }
            
            if(number.length >= 9){
                $pagamento.validateCreditCard(number, input);
            }

            let cardNumber = input.value.replace(/\s/g, "");
            cardNumber = cardNumber.replace(/(\d{4})/g, "$1 ");
            input.value = cardNumber.trim();
        }

        $pagamento.getCreditCardBrand = function(number, input){
            let img = input.closest('.card').querySelector('[name = brand]');
    
            function toggleImageHiddenClass(isHidden) {
                if(isHidden) {
                    img.classList.add('hidden');
                } else {
                    img.classList.remove('hidden');
                }
            }

            $min.ajax({
                url: $min.root() + $ui.relativePath + 'Pagamento/GetCreditCardBrand?number=' + number,
                headers: {
                    "Content-Type": "application/json",
                    "X-XSRF-TOKEN": $min.getCookie("XSRF-TOKEN")
                },
                onsuccess: function (bandeira) {
                    toggleImageHiddenClass(bandeira == "Padrão");
                    
                    switch(bandeira.toUpperCase()) {
                        case "VISA":
                            img.src = "/image/visa.png";
                            break;
                        case "ELO":
                            img.src = "/image/elo.png";
                            break;
                        case "AMERICAN EXPRESS":
                            img.src = "/image/american_express.png";
                            break;
                        case "HIPERCARD":
                            img.src = "/image/hipercard.png";
                            break;
                        case "MASTERCARD":
                        case "GOLD":
                            img.src = "/image/mastercard.png";
                            break;
                        default:
                            // leave img.src as it is
                            break;
                    }
                },
                onfailure: function (httpCode, httpMessage) {
                }
            });
        }

        $pagamento.validateCreditCard = function(number, input){
            console.log(number)
            $min.ajax({
                url: $min.root() + $ui.relativePath + 'Pagamento/ValidaCreditCard?number=' + number,
                headers: {
                    "Content-Type": "application/json",
                    "X-XSRF-TOKEN": $min.getCookie("XSRF-TOKEN")
                },
                onsuccess: function (isValid) {
                    if(!isValid){
                        console.log('entrei')
                        input.classList.add('error');
                    }else{
                        input.classList.remove('error');
                    }
                },
                onfailure: function (httpCode, httpMessage) {
                }
            });
        }

    })(window.$pagamento = window.$pagamento || {});

    $pagamento.carregar(document.getElementById("pagamento"));
</script>
<script>

    function changeMenu(element){
        let name = element.className;
        let card = document.querySelector('.content-menu-pagamento > .card');
        let pix = document.querySelector('.content-menu-pagamento > .pix');

        if(name == 'card') {

            element.style = 'background-color: #f2f2f2af;';
            card.classList.remove('hidden');

            element.parentElement.getElementsByClassName('pix')[0].style = 'background-color: #fff;';
            pix.classList.add('hidden');

        }else{

            element.style = 'background-color: #f2f2f2af;';
            pix.classList.remove('hidden');

            element.parentElement.getElementsByClassName('card')[0].style = 'background-color: #fff;';
            card.classList.add('hidden');
        }
    }

    

    document.querySelector('.card-number-input').oninput = () =>{
        document.querySelector('.card-number-box').innerText = document.querySelector('.card-number-input').value;
    }

    document.querySelector('.card-holder-input').oninput = () =>{
        document.querySelector('.card-holder-name').innerText = document.querySelector('.card-holder-input').value;
    }

    document.querySelector('.month-input').oninput = () =>{
        document.querySelector('.exp-month').innerText = document.querySelector('.month-input').value;
    }

    document.querySelector('.year-input').oninput = () =>{
        document.querySelector('.exp-year').innerText = document.querySelector('.year-input').value;
    }

    document.querySelector('.cvv-input').onclick = () =>{
        document.querySelector('.front').style.transform = 'perspective(1000px) rotateY(-180deg)';
        document.querySelector('.back').style.transform = 'perspective(1000px) rotateY(0deg)';
    }

    document.querySelector('.cvv-input').onmouseleave = () =>{
        document.querySelector('.front').style.transform = 'perspective(1000px) rotateY(0deg)';
        document.querySelector('.back').style.transform = 'perspective(1000px) rotateY(180deg)';
    }

    document.querySelector('.cvv-input').oninput = () =>{
        document.querySelector('.cvv-box').innerText = document.querySelector('.cvv-input').value;
    }
</script>